#!/bin/bash

# a simple bash script for Cadence Xcelcium verilog simulations

echo "Xcelcium Simulation Control File"

# reset control variables
compile=0
cells=0
syn=0
sim=0
gui=0
topmodule=""
newtopflag=0

# read and process input arguments
for arg in $@
do
    if [ "$arg" == "-compile" ]
    then
      compile=1
    elif [ "$arg" == "-syn" ]
    then
	syn=1
    elif [ "$arg" == "-sim" ]
    then
	sim=1
    elif [ "$arg" == "-cells" ]
    then
	cells=1
    elif [ "$arg" == "-gui" ]
    then
	gui=1
    elif [ $newtopflag == 1 ]
    then
	topmodule=$arg
	newtopflag=0
    elif [ "$arg" == "-top" ]
    then
	newtopflag=1
    fi
done

echo ""
pushd work

# if compiling source files
if [ $compile == 1 ]
then
    if [ $syn == 0 ]
    then
        # read in list of design files
        source ../scripts/design_files

        # loop through list of design files and compile
        for design_file in ${ver_files[@]}
        do
            echo "   Compiling "$design_file
	    xmverilog $design_file -compile
        done  
	#xmelab fir_filter -sdf_file ../../synthesis/netlists/fir_filter_syn.sdf
     else # if synthesis
        # read in list of design files
        source ../scripts/design_files_syn

        # loop through list of design files and compile
        for design_file in ${ver_files[@]}
        do
            echo "   Compiling "$design_file
	    xmverilog $design_file -compile
        done  
     fi   
fi

if [ $cells == 1 ]
then
    for cell_file in /apps/design_kits/ibm_kits/IBM_IP/ibm_cmos8hp/std_cell/sc/v.20110613/verilog/*.v
    do
	xmverilog $cell_file -compile
    done
fi

# if simulating files
if [ $sim == 1 ]
then 
    if [ $syn == 1 ]
    then
	topmodule="${topmodule}_syn"
    fi
    
    if [ $gui == 1 ]
    then
	# if gui
	xmverilog ../testbench/${topmodule}_tb.v +access+r +gui	-timescale 1ns/1ps
    else
	# if not gui
	xmverilog ../testbench/${topmodule}_tb.v +access+r -timescale 1ns/1ps
    fi 
fi   

popd



	
